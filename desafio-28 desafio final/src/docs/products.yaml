#Product
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: ObjectId
          description: Id generada por mongo
        nombre:
          type: string
          description: Nombre del producto
        descripcion:
          type: string
          description: descripcion del producto
        codigo:
          type: number
          description: Codigo del producto
        foto:
          type: string
          description: Foto url del producto
        precio:
          type: number
          description: Valor del producto
        stock:
          type: number
          description: stock actual del producto
        timestamp: 
          type: date
          description: fecha de ingreso del producto

      example:
        id: ObjectId("assasasa2as1as1asas12")
        nombre: calculadora
        descripcion: de metal
        codigo: 1231
        foto: https://img.icons8.com/ios/452/calculator--v1.png
        precio: 2500
        stock: 100
        timestamp: 2022-12-15T00:14:41.920Z

  requestBodies:
    nuevoProducto:
      type: object
      properties:
        nombre:
          type: string
          description: Nombre del producto
        descripcion:
          type: string
          description: descripcion del producto
        codigo:
          type: number
          description: Codigo del producto
        foto:
          type: string
          description: Foto url del producto
        precio:
          type: number
          description: Valor del producto
        stock:
          type: number
          description: stock actual del producto

      example:
        nombre: calculadora21
        descripcion: de metal
        codigo: 1231
        foto: https://img.icons8.com/ios/452/calculator--v1.png
        precio: 2500
        stock: 100
paths:
  /api/productos:
    get:
      summary: Obtiene todo los productos
      tags:
        - Product
      responses:
        "200":
          description: Los productos se obtuvieron correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /api/productos/guardar:
    post:
      summary: Crea nuevo producto
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/nuevoProducto'
      responses:
        "200":
          description: El producto se agrego satisfactoriamente
  /api/productos/listar/{_id}:
    get:
      tags:
        - Product
      summary: Find product by ID
      description: Returns a single pet
      operationId: findById
      parameters:
        - name: _id
          in: path
          description: ID of product to return
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
      security:
        - api_key: []
        - productstore_auth:
            - write:products
            - read:products